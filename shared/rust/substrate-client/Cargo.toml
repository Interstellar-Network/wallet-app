[package]
name = "substrate-client"
version = "0.1.0"
edition = "2021"

[lib]
# ANDROID: "This must contain at least cdylib for Android libraries to be generated."
# https://github.com/bbqsrc/cargo-ndk/blob/main/example/Cargo.toml
# else:
# [2022-05-16T09:53:58Z INFO  cargo_ndk::cli] Copying libraries to ./jniLibs...
# [2022-05-16T09:53:58Z ERROR cargo_ndk::cli] No .so files found in path
#
# IOS: error: cannot produce cdylib for `shared-rs v0.1.0 (/.../wallet-app/shared/rust)` as the target `x86_64-apple-ios` does not support these crate types
crate-type = ["cdylib", "staticlib", "lib"]

[dependencies]
log = "0.4"
# NOTE: this is a dep of "android_logger" so no point in putting it behind a "cfg"
env_logger = "0.10"
ipfs-api-backend-hyper = { version = "0.6", features = [ "with-send-sync" , "with-builder" ] }
futures-util = "0.3"
tokio = { version = "1.20", features = ["rt-multi-thread"] }
clap = { version = "3.1.6", features = ["derive"] }
url = "2.3.1"

# only for Android
jni = { version = "0.20", optional = true }
jni_fn = { version = "0.1", optional = true }
bytemuck = "1.11.0"

# default-features to disable all std related code?
# "you can basically only use the compose_extrinsic_offline macro."
# maybe see https://github.com/scs/substrate-api-client/issues/166 ?
# substrate-api-client = { git = "https://github.com/scs/substrate-api-client.git", default-features = false, branch = "polkadot-v0.9.36" }
# [windows] error: failed to run custom build command for `openssl-sys v0.9.73
# Still fails even with Perl(strawberry) cf README
# So for now install Android Studio inside WSL2...
# ALSO "vendored" COULD BE needed b/c "/bin/sh: line 1: aarch64-linux-android-ranlib: command not found" https://github.com/sfackler/rust-openssl/issues/1830
openssl = { version = '0.10', features = ["vendored"] }
# those are for the examples cf https://github.com/scs/substrate-api-client/blob/master/Cargo.toml
# but here need them as part of our public API
# TODO cleanup eg MAYBE we need sp-core NOT the full node-template-runtime
# env_logger = "0.9.0"
# node-template-runtime = { git = "https://github.com/paritytech/substrate.git", branch = "master" }
sp-keyring = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }
# clap = { version = "2.33", features = ["yaml"] }
# wabt = "0.10.0"

sp-std = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }
sp-core = { default-features = false, features = ["full_crypto"], git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }

# local
common = { path = "../common" }
integritee-cli = { git = "https://github.com/Interstellar-Network/integritee-worker.git", branch = "bump-polkadot-v0.9.39", features = ["sidechain"] }
# FIX: force correct features for this dep
sgx_crypto_helper = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git", features = ["crypto_direct"] }

# TEMP
# else we hit: https://github.com/bytecodealliance/wasmtime/blob/v1.0.2/crates/runtime/src/traphandlers/unix.rs#L232
# when building "cargo build --target=x86_64-linux-android"
# wasmtime-runtime = "5.0.0"

[target.'cfg(target_os = "android")'.dependencies]
android_logger = "0.12"

[dev-dependencies]
# features "invocation" needed for tests(to create a JVM)
jni = { version = "0.20", features = ["invocation"] }
serial_test = "1"

[features]
default = ["std"]
std = []
with-jni = ["jni", "jni_fn"]
with-cwrapper = []
# NOTE: technically for offline demos we DO NOT need integritee-cli,sgx_crypto_helper,etc
# but we keep compiling/testing with them b/c we really want to be sure Android compiles fine
offline_demo = []