# NOTE: technically all Rust code in in shared/rust/ directory but:
# - for VSCode it is simpler to make the top folder a Rust workspace else not discovered automatically
# - for CI(namely Swatinem/rust-cache) in cleanup we get:
#       Warning:  Command failed: cargo metadata --all-features --format-version 1
#       Warning:  error: could not find `Cargo.toml` in `/home/runner/work/wallet-app/wallet-app` or any parent directory
#       ... Cleaning /home/runner/work/wallet-app/wallet-app/target ...
#       Warning:  Error: ENOENT: no such file or directory, opendir '/home/runner/work/wallet-app/wallet-app/target'
#   (it still works just fine, but still...)

[workspace]
# needed for wgpu; else:
# error: Metal API enabled on non-Apple OS. If your project is not using resolver="2" in Cargo.toml, it should.
resolver = "2"

members = [
    "shared/rust/circuit_evaluate",
    "shared/rust/common",
    "shared/rust/renderer",
    # "interstellar-integritee-cli",
    # "interstellar-integritee-worker-cli",
    # "deps/integritee-worker/cli",
    "shared/rust/substrate-client",
]

[profile.release-with-debug]
inherits = "release"
debug = true

# https://bevy-cheatbook.github.io/pitfalls/performance.html
# "Enable only a small amount of optimization in debug mode"
[profile.dev]
opt-level = 1

# "Enable high optimizations for dependencies (incl. Bevy), but not for our code:"
[profile.dev.package."*"]
opt-level = 3

[profile.release]
lto = "thin"

[patch."https://github.com/apache/teaclave-sgx-sdk.git"]
# itc-rpc-client = { path = "../integritee-worker/core/rpc-client/" }
# TODO ideally we would directly use this patched version from `integritee-cli`
# but it is quite a mess to make it work both from repo `integritee-worker` and here
sgx_crypto_helper = { path = "./shared/rust/deps/teaclave-sgx-sdk/sgx_crypto_helper/" }

[patch.crates-io]
# wasmtime-runtime: we MUST patch to make it compatible with Android Emulator
# ELSE: wasmtime-runtime-1.0.2/src/traphandlers/unix.rs:232:13 compile_error!("unsupported platform");
# SHOULD match https://github.com/paritytech/substrate/blob/master/primitives/wasm-interface/Cargo.toml
# NOTE: we NEED to patch "wasmtime-runtime" but to avoid error like "note: perhaps two different versions of crate `wasmtime_environ` are being used?"
# the easiest thing to do is patch the "main lib"
# NOTE: for the PATCH the work, it MUST be a the correct version(= git tag)
# wasmtime-runtime = { path = "../wasmtime/crates/runtime/" }
# wasmtime-environ = { path = "../wasmtime/crates/environ/" }
# wasmtime = { path = "./shared/rust/deps/wasmtime/crates/wasmtime/" }
# TODO re-add for bevy 0.9? or not needed anymore
# NOTE: patch DOES NOT work except at the Workspace level??
# bevy_render = { path = './shared/rustrenderer/patch/bevy_render-0.7.0' }

[patch."https://github.com/integritee-network/pallets.git"]
sgx-verify = { path = "./shared/rust/deps/integritee-pallets/teerex/sgx-verify/" }
# 161 |                 Enclave::new(
#     |                 ------------ arguments to this function are incorrect
# ...
# 166 |                     report.build_mode,
#     |                     ^^^^^^^^^^^^^^^^^ expected enum `teerex_primitives::SgxBuildMode`, found a different enum `teerex_primitives::SgxBuildMod
teerex-primitives = { path = "./shared/rust/deps/integritee-pallets/primitives/teerex/" }

################################################################################
# local dev

[patch."https://github.com/Interstellar-Network/lib-garble-rs.git"]
lib-garble-rs = { path = "../lib-garble-rs/lib-garble-rs/" }

# [patch."https://github.com/Interstellar-Network/swanky.git"]
# fancy-garbling = { path = "../swanky/fancy-garbling/" }

[patch."https://github.com/Interstellar-Network/integritee-worker.git"]
integritee-cli = { path = "../integritee-worker/cli" }

# [patch."https://github.com/Interstellar-Network/pallets.git"]
# circuits-storage-common = { path = "../pallets/circuits-storage-common" }